/*-------------------------------------------------------*/
/* bmtad/mailer.ic	( YZU WindTop BBS 3.0 )		 */
/*-------------------------------------------------------*/
/* target : included C file for Access Control List	 */
/* create : 						 */
/* update : 						 */
/*-------------------------------------------------------*/


#include <stdio.h>


typedef struct MAILER_t
{
  struct MAILER_t *nacl;
  unsigned char filter[0];
}     MAILER_t;


static MAILER_t *mailer_root;


static void
mailer_add(filter)
  unsigned char *filter;
{
  int cc, len;
  char *str;
  MAILER_t *ax;

  str = filter;
  len = 0;
  for (;;)
  {
    cc = *str;
    if (cc == '\n' || cc == '#' || cc == '\t' || cc == '\r')
    {
      *str = '\0';
      break;
    }
    if (!cc)
      break;

    str++;
    len++;
  }

  if (len <= 0)
    return;

  ax = (MAILER_t *) malloc(sizeof(MAILER_t) + len + 1);

  ax->nacl = mailer_root;
  mailer_root = ax;

  str = ax->filter;
  do
  {
    cc = *filter++;
    if (cc >= 'A' && cc <= 'Z')
      cc += 0x20;
  } while (*str++ = cc);
}


static void
mailer_load(fpath)
  char *fpath;
{
  FILE *fp;
  char buf[256];

  if (fp = fopen(fpath, "r"))
  {
    fpath = buf;
    while (fgets(fpath, sizeof(buf), fp))
    {
      if (!*fpath)
	break;

      if (*fpath == '#')
	continue;

      mailer_add(fpath);
    }
    fclose(fp);
  }
}


static int
mailer_match(rm)
  unsigned char *rm;
{
  MAILER_t *ax;
  unsigned char *filter, xm[128];
  int lm;

  if (!(ax = mailer_root))
    return 0;

  lm = str_cpy(xm, rm, sizeof(xm));
  rm = xm;

  do
  {
    filter = ax->filter;

    if (strstr(rm, filter))
      return 1;
  } while (ax = ax->nacl);

  return 0;
}


